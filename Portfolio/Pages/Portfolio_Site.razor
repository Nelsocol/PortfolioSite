@page "/Portfolio_Site"

<PageTitle>Portfolio Site</PageTitle>

<div class="fixedContainer">
    <HomeButton />

    <h1>Portfolio Site</h1>

    <div class="statusBanner active">
        <h3>Status: Active</h3>
        <h3>Github: <a href="https://github.com/Nelsocol/PortfolioSite" target="_blank">https://github.com/Nelsocol/PortfolioSite</a></h3>
    </div>

    <h2>Description</h2>

    <p>
        This portfolio site you are currently browsing is actually a side project of mine, built from the ground up in Blazor with C#.
        It uses no template components, layouts, or premade CSS, and was constructed entirely from scratch.
        The source is available on Github, and it utlizes continuous deployment through netlify of the main branch of the repo.
    </p>

    <h2>Demonstrated Skills</h2>

    <h3>CSS</h3>
    <h3>HTML</h3>
    <h3>C#</h3>
    <h3>Blazor</h3>
</div>
<div class="mainContainer">
    <img src="./img/Portfolio_Banner.png"/>
    <h2>Project Goals</h2>

    <p>
        The goal of this site is obviously to present my work in a clear, accessible, and aesthetically appealing way. 
        While it contains finished information on all major side projects and notable class projects, the project is considered ongoing as I have intentions to expand the site in the future as more projects come about, and perhaps to integrate additional interactive components into the pages.
    </p>

    <h2>Current State</h2>

    <p>
        Currently, the site contains finished stylings for a basic desktop layout, and information on all of my major side projects and class projects. 
        The UI is constructed entirely in the C# driven Blazor framework, and entirely by hand.
    </p>

    <h2>Challenges</h2>

    <p>While this project was not my most challenging, it was a new experience to learn about continous deployment via Github, and this is my first experience deploying a web service of any kind to the open internet.</p>

    <h2>Project Selection Criteria</h2>

    <p>
        In deciding which side projects to present on my site, I wanted to limit it to only side projects which were either under active development, had plans for future development, or which were completed.
        I also disqualified any side projects or school projects which were completed, but did not serve a purpose in demonstrating a unique set of skills and learning experiences.
        Each side project on this site was determined to be sufficiently unique, interesting to me, and informative enough to include, and they represent a range of skillsets, project durations, and team sizes.
    </p>

    <h2>Future Plans</h2>

    <p>
        Although I have other concerns and projects that need work before returning to enhance and expand the portfolio site, I do have several intentions worthy of returning to eventually.
        The most interesting is that considering that the backend engine of this site is running in C#, and many of my side projects are also constructed in the same, I am curious to explore how difficult it would be to migrate some of those other side projects to an interface that would allow me to include an interactive version of the project itself on this site.
        This would allow me to improve and clean up the UI of several of the smaller projects constructed in Windows Forms, increasing their usability and reducing their platform dependance.
    </p>

    <p>
        The site will also of course continue to receive updates if new side projects are added, though currently I have plenty of work betwen my various projects and don't intend to switch rails soon.
    </p>
</div>
